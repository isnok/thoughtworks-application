global
        maxconn     2000

        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        retries 1
        option  redispatch
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http


frontend companyNews
        bind 0.0.0.0:80

        #option httpclose
        #option forwardfor

        acl is_image path_beg /images
        use_backend static if is_image

        acl is_style path_beg /styles
        use_backend static if is_style

        default_backend appservers


        stats enable
        stats uri /haproxy?stats
        stats realm Strictly\ Private
        stats auth haproxy_stats_admin:iePha4se



backend appservers

        balance roundrobin
{% for server in appservers %}
        server {{server['name']}} {{server['ip']}}:{{server['port']}} check
{% endfor %}


backend static
        # rewriting based on regular expressions
        # http-request set-query %[query, regsub(/[^/].*,,)]

        balance roundrobin
{% for server in static %}
        server {{server['name']}} {{server['ip']}}:{{server['port']}} check
{% endfor %}
